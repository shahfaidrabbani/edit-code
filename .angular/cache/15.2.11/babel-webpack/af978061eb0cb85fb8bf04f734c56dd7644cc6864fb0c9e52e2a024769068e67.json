{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nconst _c0 = [\"editorContainer\"];\nfunction EditorComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"textarea\", 7, 8);\n    i0.ɵɵlistener(\"input\", function EditorComponent_div_8_Template_textarea_input_1_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onValueChange($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", ctx_r0.value)(\"placeholder\", \"Enter \" + ctx_r0.heading + \" code here...\");\n  }\n}\nexport let EditorComponent = /*#__PURE__*/(() => {\n  class EditorComponent {\n    constructor() {\n      this.heading = '';\n      this.language = '';\n      this.value = '';\n      this.icon = '';\n      this.color = '';\n      this.valueChange = new EventEmitter();\n      this.isOpen = true;\n    }\n    ngOnInit() {\n      this.initializeEditor();\n    }\n    initializeEditor() {\n      // Monaco Editor will be initialized here\n      // For now, we'll use a simple textarea\n      setTimeout(() => {\n        this.setupMonacoEditor();\n      }, 100);\n    }\n    setupMonacoEditor() {\n      // This will be implemented with Monaco Editor\n      // For now, using a simple textarea approach\n    }\n    onValueChange(event) {\n      this.valueChange.emit(event.target.value);\n    }\n    toggleEditor() {\n      this.isOpen = !this.isOpen;\n    }\n  }\n  EditorComponent.ɵfac = function EditorComponent_Factory(t) {\n    return new (t || EditorComponent)();\n  };\n  EditorComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EditorComponent,\n    selectors: [[\"app-editor\"]],\n    viewQuery: function EditorComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.editorContainer = _t.first);\n      }\n    },\n    inputs: {\n      heading: \"heading\",\n      language: \"language\",\n      value: \"value\",\n      icon: \"icon\",\n      color: \"color\"\n    },\n    outputs: {\n      valueChange: \"valueChange\"\n    },\n    decls: 9,\n    vars: 8,\n    consts: [[1, \"container\"], [1, \"header\"], [1, \"heading\"], [1, \"icon\"], [1, \"toggle-btn\", 3, \"click\"], [\"class\", \"editor-wrapper\", 4, \"ngIf\"], [1, \"editor-wrapper\"], [1, \"editor\", 3, \"value\", \"placeholder\", \"input\"], [\"editorContainer\", \"\"]],\n    template: function EditorComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"span\", 3);\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function EditorComponent_Template_button_click_6_listener() {\n          return ctx.toggleEditor();\n        });\n        i0.ɵɵtext(7);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(8, EditorComponent_div_8_Template, 3, 2, \"div\", 5);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵstyleProp(\"flex-grow\", ctx.isOpen ? 1 : 0);\n        i0.ɵɵadvance(3);\n        i0.ɵɵstyleProp(\"background-color\", ctx.color);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx.icon, \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx.heading, \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", ctx.isOpen ? \"\\u2212\" : \"+\", \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isOpen);\n      }\n    },\n    dependencies: [i1.NgIf],\n    styles: [\".container[_ngcontent-%COMP%]{flex-grow:1;flex-basis:0;display:flex;flex-direction:column;padding:0 8px 8px}.header[_ngcontent-%COMP%]{display:flex;justify-content:space-between;background:#011a19;color:#aaaebc;font-weight:700;border:1px solid #408785;border-top-left-radius:10px;border-top-right-radius:10px}.heading[_ngcontent-%COMP%]{background:#1d1e22;padding:9px 12px;display:flex;align-items:center}.icon[_ngcontent-%COMP%]{border-radius:5px;margin-right:5px;height:20px;width:20px;display:flex;place-content:center;color:#000;padding-bottom:2px;font-size:12px;font-weight:700}.toggle-btn[_ngcontent-%COMP%]{align-self:center;color:#fff;border-radius:5px;background-color:#1d1e22;border:none;padding:8px;cursor:pointer;font-size:16px;font-weight:700}.toggle-btn[_ngcontent-%COMP%]:hover{background-color:#2d2e32}.editor-wrapper[_ngcontent-%COMP%]{flex:1}.editor[_ngcontent-%COMP%]{width:100%;height:340px;background:#1d1e22;color:#fff;border:none;font-family:Cascadia Code,Monaco,Consolas,monospace;font-size:20px;padding:10px;resize:none;outline:none}.editor[_ngcontent-%COMP%]::placeholder{color:#666}\"]\n  });\n  return EditorComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}